/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TodoImport } from './routes/todo'
import { Route as AccountImport } from './routes/account'
import { Route as MelopeeEmploiCodeurDashboardImport } from './routes/melopee/emploi/codeur/dashboard'
import { Route as MelopeeEmploiCodeurLogementMEL001Import } from './routes/melopee/emploi/codeur/logement/MEL-001'

// Create Virtual Routes

const MuiLazyImport = createFileRoute('/mui')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const MuiLazyRoute = MuiLazyImport.update({
  path: '/mui',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/mui.lazy').then((d) => d.Route))

const TodoRoute = TodoImport.update({
  path: '/todo',
  getParentRoute: () => rootRoute,
} as any)

const AccountRoute = AccountImport.update({
  path: '/account',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const MelopeeEmploiCodeurDashboardRoute =
  MelopeeEmploiCodeurDashboardImport.update({
    path: '/melopee/emploi/codeur/dashboard',
    getParentRoute: () => rootRoute,
  } as any)

const MelopeeEmploiCodeurLogementMEL001Route =
  MelopeeEmploiCodeurLogementMEL001Import.update({
    path: '/melopee/emploi/codeur/logement/MEL-001',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    '/todo': {
      id: '/todo'
      path: '/todo'
      fullPath: '/todo'
      preLoaderRoute: typeof TodoImport
      parentRoute: typeof rootRoute
    }
    '/mui': {
      id: '/mui'
      path: '/mui'
      fullPath: '/mui'
      preLoaderRoute: typeof MuiLazyImport
      parentRoute: typeof rootRoute
    }
    '/melopee/emploi/codeur/dashboard': {
      id: '/melopee/emploi/codeur/dashboard'
      path: '/melopee/emploi/codeur/dashboard'
      fullPath: '/melopee/emploi/codeur/dashboard'
      preLoaderRoute: typeof MelopeeEmploiCodeurDashboardImport
      parentRoute: typeof rootRoute
    }
    '/melopee/emploi/codeur/logement/MEL-001': {
      id: '/melopee/emploi/codeur/logement/MEL-001'
      path: '/melopee/emploi/codeur/logement/MEL-001'
      fullPath: '/melopee/emploi/codeur/logement/MEL-001'
      preLoaderRoute: typeof MelopeeEmploiCodeurLogementMEL001Import
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AccountRoute,
  TodoRoute,
  MuiLazyRoute,
  MelopeeEmploiCodeurDashboardRoute,
  MelopeeEmploiCodeurLogementMEL001Route,
})

/* prettier-ignore-end */
